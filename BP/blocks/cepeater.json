{
	"format_version": "1.16.100",
	"minecraft:block": {
		"description": {
			"identifier": "parv:cepeater",
			"properties": {
				"parv:delay": [
					0,
					1,
					2,
					3
				],
				"parv:direction": [
					2,
					3,
					4,
					5
				],
				"parv:islocked": [
					false,
					true
				],
				"parv:active": [
					false,
					true
				]
			}
		},
		"components": {
			"minecraft:ticking": {
				"looping": true,
				"on_tick": {
					"event": "parv:ontick"
				},
				"range": [
					0,
					0
				]
			},
			"minecraft:block_light_absorption": 0,
			"minecraft:block_light_emission": 0,
			"minecraft:geometry": "geometry.repeater",
			"minecraft:material_instances": {
				"*": {
					"ambient_occlusion": false,
					"face_dimming": false,
					"render_method": "blend"
				}
			},
			"minecraft:on_player_placing": {
				"event": "parv:onplace"
			},
			"minecraft:part_visibility": {
				"rules": {
					"t1": "q.block_property('parv:delay') == 0&&q.block_property('parv:islocked') == false",
					"t2": "q.block_property('parv:delay') == 1&&q.block_property('parv:islocked') == false",
					"t3": "q.block_property('parv:delay') == 2&&q.block_property('parv:islocked') == false",
					"t4": "q.block_property('parv:delay') == 3&&q.block_property('parv:islocked') == false",
					"l1": "q.block_property('parv:delay') == 0&&q.block_property('parv:islocked') == true",
					"l2": "q.block_property('parv:delay') == 1&&q.block_property('parv:islocked') == true",
					"l3": "q.block_property('parv:delay') == 2&&q.block_property('parv:islocked') == true",
					"l4": "q.block_property('parv:delay') == 3&&q.block_property('parv:islocked') == true"
				}
			}
		},
		"permutations": [
			{
				"condition": "q.block_property('parv:active') == true",
				"components": {
					"minecraft:material_instances": {
						"*": {
							"texture": "cepeater_on",
							"ambient_occlusion": false,
							"face_dimming": false,
							"render_method": "blend"
						}
					},
					"tag:cepeater_active": {}
				}
			},
			{
				"condition": "q.block_property('parv:active') == false",
				"components": {
					"minecraft:material_instances": {
						"*": {
							"texture": "cepeater_off",
							"ambient_occlusion": false,
							"face_dimming": false,
							"render_method": "blend"
						}
					}
				}
			},
			{
				"condition": "query.block_property('parv:direction') == 2",
				"components": {
					"minecraft:rotation": [
						0,
						0,
						0
					],
					"tag:cepeater_north": {},
					"tag:cepeater_n_s": {}
				}
			},
			{
				"condition": "query.block_property('parv:direction') == 3",
				"components": {
					"minecraft:rotation": [
						0,
						180,
						0
					],
					"tag:cepeater_south": {},
					"tag:cepeater_n_s": {}
				}
			},
			{
				"condition": "query.block_property('parv:direction') == 4",
				"components": {
					"minecraft:rotation": [
						0,
						90,
						0
					],
					"tag:cepeater_west": {},
					"tag:cepeater_e_w": {}
				}
			},
			{
				"condition": "query.block_property('parv:direction') == 5",
				"components": {
					"minecraft:rotation": [
						0,
						270,
						0
					],
					"tag:cepeater_east": {},
					"tag:cepeater_e_w": {}
				}
			},
			{
				"condition": "query.block_property('parv:delay') == 0",
				"components": {
					"minecraft:map_color": "#00FF00",
					"minecraft:on_interact": {
						"event": "parv:setdelay"
					},
					"minecraft:ticking": {
						"looping": true,
						"on_tick": {
							"event": "parv:ontick"
						},
						"range": [
							1,
							1
						]
					}
				}
			},
			{
				"condition": "query.block_property('parv:delay') == 1",
				"components": {
					"minecraft:map_color": "#00FF00",
					"minecraft:on_interact": {
						"event": "parv:setdelay"
					},
					"minecraft:ticking": {
						"looping": true,
						"on_tick": {
							"event": "parv:ontick"
						},
						"range": [
							2,
							2
						]
					}
				}
			},
			{
				"condition": "query.block_property('parv:delay') == 2",
				"components": {
					"minecraft:map_color": "#00FF00",
					"minecraft:on_interact": {
						"event": "parv:setdelay"
					},
					"minecraft:ticking": {
						"looping": true,
						"on_tick": {
							"event": "parv:ontick"
						},
						"range": [
							3,
							3
						]
					}
				}
			},
			{
				"condition": "query.block_property('parv:delay') == 3",
				"components": {
					"minecraft:map_color": "#00FF00",
					"minecraft:on_interact": {
						"event": "parv:setdelay"
					},
					"minecraft:ticking": {
						"looping": true,
						"on_tick": {
							"event": "parv:ontick"
						},
						"range": [
							4,
							4
						]
					}
				}
			},
			{
				"condition": "q.block_property('parv:islocked') == true",
				"components": {}
			},
			{
				"condition": "q.block_property('parv:islocked') == false",
				"components": {}
			}
		],
		"events": {
			"parv:ontick": {
				"sequence": [
					{
						"trigger": "parv:checklock"
					},
					{
						"trigger": "parv:conduct"
					}
				]
			},
			"parv:checklock": {
				"sequence": [
					{
						"condition": "q.block_property('parv:direction')==2",
						"randomize": [
							{
								"condition": "!q.block_neighbor_has_all_tags(1,0,0,'cepeater_west','cepeater_active')&&!q.block_neighbor_has_all_tags(-1,0,0,'cepeater_east','cepeater_active')",
								"weight": 1,
								"set_block_property": {
									"parv:islocked": false
								}
							},
							{
								"condition": "q.block_neighbor_has_all_tags(1,0,0,'cepeater_west','cepeater_active')||q.block_neighbor_has_all_tags(-1,0,0,'cepeater_east','cepeater_active')",
								"weight": 1,
								"set_block_property": {
									"parv:islocked": true
								},
								"run_command": {
									"command": [
										"say lock found at :north:"
									]
								}
							}
						]
					},
					{
						"condition": "q.block_property('parv:direction')==3",
						"randomize": [
							{
								"condition": "!q.block_neighbor_has_all_tags(0,0,1,'cepeater_west','cepeater_active')&&!q.block_neighbor_has_all_tags(0,0,-1,'cepeater_east','cepeater_active')",
								"weight": 1,
								"set_block_property": {
									"parv:islocked": false
								}
							},
							{
								"condition": "!q.block_neighbor_has_all_tags(0,0,1,'cepeater_west','cepeater_active')||!q.block_neighbor_has_all_tags(0,0,-1,'cepeater_east','cepeater_active')",
								"weight": 1,
								"set_block_property": {
									"parv:islocked": true
								},
								"run_command": {
									"command": [
										"say lock found at :east:"
									]
								}
							}
						]
					},
					{
						"condition": "q.block_property('parv:direction')==4",
						"randomize": [
							{
								"condition": "!q.block_neighbor_has_all_tags(1,0,0,'cepeater_west','cepeater_active')&&!q.block_neighbor_has_all_tags(-1,0,0,'cepeater_east','cepeater_active')",
								"weight": 1,
								"set_block_property": {
									"parv:islocked": false
								}
							},
							{
								"condition": "q.block_neighbor_has_all_tags(1,0,0,'cepeater_west','cepeater_active')||q.block_neighbor_has_all_tags(-1,0,0,'cepeater_east','cepeater_active')",
								"weight": 1,
								"set_block_property": {
									"parv:islocked": true
								},
								"run_command": {
									"command": [
										"say lock found at :south:"
									]
								}
							}
						]
					},
					{
						"condition": "q.block_property('parv:direction')==5",
						"randomize": [
							{
								"condition": "!q.block_neighbor_has_all_tags(0,0,1,'cepeater_west','cepeater_active')&&!q.block_neighbor_has_all_tags(,0,0-1,'cepeater_east','cepeater_active')",
								"weight": 1,
								"set_block_property": {
									"parv:islocked": false
								}
							},
							{
								"condition": "!q.block_neighbor_has_all_tags(0,0,1,'cepeater_west','cepeater_active')||!q.block_neighbor_has_all_tags(0,0,-1,'cepeater_east','cepeater_active')",
								"weight": 1,
								"set_block_property": {
									"parv:islocked": true
								},
								"run_command": {
									"command": [
										"say lock found at :west:"
									]
								}
							}
						]
					}
				]
			},
			"parv:conduct": {
				"run_command": {
					"command": [
						"say repeater is trying to conduct"
					]
				},
				"randomize": [
					{
						"condition": "query.block_property('parv:direction') == 2&&!query.block_property('parv:islocked') == true",
						"weight": 1,
						"sequence": [
							{
								"condition": "q.block_neighbor_has_any_tag(0,0,1,'dust')&&query.block_neighbor_has_any_tag(0,0,-1,'cwire','cepeater_active')",
								"run_command": {
									"command": [
										"say conductin north",
										"setblock ~~~1 parv:wire10"
									]
								},
								"set_block_property": {
									"parv:active": true
								}
							},
							{
								"set_block_property": {
									"parv:active": "!q.block_neighbor_has_any_tag(0,0,-1,'cwire')||!q.block_neighbor_has_any_tag(0,0,-1,'cepeater_active')"
								}
							}
						]
					},
					{
						"condition": "query.block_property('parv:direction') == 3&&!query.block_property('parv:islocked')",
						"weight": 1,
						"sequence": [
							{
								"condition": "q.block_neighbor_has_any_tag(0,0,-1,'dust')&&query.block_neighbor_has_any_tag(0,0,1,'cwire','cepeater_active')",
								"run_command": {
									"command": [
										"say conductin north",
										"setblock ~~~-1 parv:wire10"
									]
								},
								"set_block_property": {
									"parv:active": true
								}
							},
							{
								"set_block_property": {
									"parv:active": "!q.block_neighbor_has_any_tag(0,0,1,'cwire')||!q.block_neighbor_has_any_tag(0,0,1,'cepeater_active')"
								}
							}
						]
					},
					{
						"condition": "query.block_property('parv:direction') == 4&&!query.block_property('parv:islocked')",
						"weight": 1,
						"sequence": [
							{
								"condition": "q.block_neighbor_has_any_tag(1,0,0,'dust')&&query.block_neighbor_has_any_tag(-1,0,0,'cwire','cepeater_active')",
								"run_command": {
									"command": [
										"say conductin north",
										"setblock ~1~~ parv:wire10"
									]
								},
								"set_block_property": {
									"parv:active": true
								}
							},
							{
								"set_block_property": {
									"parv:active": "!q.block_neighbor_has_any_tag(-1,0,0,'cwire')||!q.block_neighbor_has_any_tag(-1,0,0,'cepeater_active')"
								}
							}
						]
					},
					{
						"condition": "query.block_property('parv:direction') == 5&&!query.block_property('parv:islocked')",
						"weight": 1,
						"sequence": [
							{
								"condition": "q.block_neighbor_has_any_tag(-1,0,0,'dust')&&query.block_neighbor_has_any_tag(1,0,0,'cwire','cepeater_active')",
								"run_command": {
									"command": [
										"say conductin north",
										"setblock ~-1~~ parv:wire10"
									]
								},
								"set_block_property": {
									"parv:active": true
								}
							},
							{
								"set_block_property": {
									"parv:active": "!q.block_neighbor_has_any_tag(1,0,0,'cwire')||!q.block_neighbor_has_any_tag(1,0,0,'cepeater_active')"
								}
							}
						]
					}
				]
			},
			"parv:onplace": {
				"set_block_property": {
					"parv:direction": "query.cardinal_facing_2d",
					"parv:active": false,
					"parv:islocked": false,
					"parv:delay": 0
				}
			},
			"parv:setdelay": {
				"randomize": [
					{
						"condition": "query.block_property('parv:delay') == 0",
						"set_block_property": {
							"parv:delay": 1
						}
					},
					{
						"condition": "query.block_property('parv:delay') == 1",
						"set_block_property": {
							"parv:delay": 2
						}
					},
					{
						"condition": "query.block_property('parv:delay') == 2",
						"set_block_property": {
							"parv:delay": 3
						}
					},
					{
						"condition": "query.block_property('parv:delay') == 3",
						"set_block_property": {
							"parv:delay": 0
						}
					}
				]
			},
			"parv:setactive": {
				"randomize": [
					{
						"condition": "query.block_property('parv:active') == false",
						"set_block_property": {
							"parv:active": true
						}
					},
					{
						"condition": "query.block_property('parv:active') == true",
						"set_block_property": {
							"parv:active": false
						}
					}
				]
			},
			"parv:setlock": {
				"sequence": [
					{
						"condition": "query.block_property('parv:islocked')==false",
						"set_block_property": {
							"parv:islocked": true
						}
					},
					{
						"condition": "query.block_property('parv:islocked')==true",
						"set_block_property": {
							"parv:islocked": false
						}
					}
				]
			}
		}
	}
}